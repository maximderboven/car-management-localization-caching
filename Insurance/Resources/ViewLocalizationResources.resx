<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Car_Insurance" xml:space="preserve">
    <value>Car Insurance</value>
  </data>
  <data name="What_would_you_like_to_do" xml:space="preserve">
    <value>What would you like to do?</value>
  </data>
  <data name="Exit_Message" xml:space="preserve">
    <value>Goodbye</value>
  </data>
  <data name="Choice" xml:space="preserve">
    <value>Choice (0, 9): </value>
  </data>
  <data name="Quit" xml:space="preserve">
    <value>0) Quit</value>
  </data>
  <data name="Show_All_Cars" xml:space="preserve">
    <value>1) Show all cars</value>
  </data>
  <data name="Show_All_Drivers" xml:space="preserve">
    <value>3) Show all drivers</value>
  </data>
  <data name="Show_Cars_By_Fuel" xml:space="preserve">
    <value>2) Show cars by Fuel</value>
  </data>
  <data name="All_Drivers_Filtered" xml:space="preserve">
    <value>4) All drivers with name and/or date of birth</value>
  </data>
  <data name="Add_Driver" xml:space="preserve">
    <value>5) Add a driver</value>
  </data>
  <data name="Add_Car" xml:space="preserve">
    <value>6) Add a car</value>
  </data>
  <data name="Add_Driver_To_Car" xml:space="preserve">
    <value>7) Add a driver to car</value>
  </data>
  <data name="Remove_Driver_From_Car" xml:space="preserve">
    <value>8) Remove driver from car</value>
  </data>
  <data name="Switch_Culture" xml:space="preserve">
    <value>9) Switch culture</value>
  </data>
  <data name="en-US" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="fr-FR" xml:space="preserve">
    <value>French</value>
  </data>
  <data name="nl-BE" xml:space="preserve">
    <value>Dutch</value>
  </data>
  <data name="Possible_Cultures" xml:space="preserve">
    <value>Possible cultures:</value>
  </data>
  <data name="Not_A_Valid_Option" xml:space="preserve">
    <value>is not a valid option.</value>
  </data>
  <data name="All_Cars" xml:space="preserve">
    <value>All cars</value>
  </data>
  <data name="Fuel" xml:space="preserve">
    <value>Fuel</value>
  </data>
  <data name="All_Drivers" xml:space="preserve">
    <value>All drivers</value>
  </data>
  <data name="Enter_part_of_a_name_or_leave_blank_" xml:space="preserve">
    <value>Enter (part of) a name or leave blank:</value>
  </data>
  <data name="Enter_a_full_date__yyyy_mm_dd__or_leave_blank__" xml:space="preserve">
    <value>Enter a full date (yyyy/mm/dd) or leave blank: </value>
  </data>
  <data name="Add_a_driver" xml:space="preserve">
    <value>Add a driver</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>firstname: </value>
  </data>
  <data name="lastName" xml:space="preserve">
    <value>lastname: </value>
  </data>
  <data name="Date_Of_Birth" xml:space="preserve">
    <value>Date of birth (mm/dd/yyyy): </value>
  </data>
  <data name="Add_Driver_Succes" xml:space="preserve">
    <value>Added new driver succesfully.</value>
  </data>
  <data name="Add_Driver_Failed" xml:space="preserve">
    <value>Unable to add new driver:</value>
  </data>
  <data name="Add_a_Car" xml:space="preserve">
    <value>Add a car</value>
  </data>
  <data name="PurchasePrice" xml:space="preserve">
    <value>Purchase price</value>
  </data>
  <data name="Optional" xml:space="preserve">
    <value>optional</value>
  </data>
  <data name="Brand" xml:space="preserve">
      <value>Brand</value>
  </data>
  <data name="Amount_Of_Seats" xml:space="preserve">
    <value>Amount of seats:</value>
  </data>
  <data name="Amount_of_miles_on_count_" xml:space="preserve">
    <value>Amount of miles on count:</value>
  </data>
  <data name="AddCar_Choose_garage" xml:space="preserve">
    <value>Choose garage:</value>
  </data>
  <data name="Garage" xml:space="preserve">
    <value>Garage</value>
  </data>
  <data name="Add_Car_Succes" xml:space="preserve">
    <value>Added new car succesfully.</value>
  </data>
  <data name="Add_Car_Failed" xml:space="preserve">
    <value>Unable to add new car:</value>
  </data>
  <data name="Add_Rental" xml:space="preserve">
    <value>Add a new rental</value>
  </data>
  <data name="Which_car_would_you_like_to_add_a_driver_to_" xml:space="preserve">
    <value>Which car would you like to add a driver to?</value>
  </data>
  <data name="Enter_Car_ID" xml:space="preserve">
    <value>Please enter an car ID: </value>
  </data>
  <data name="Failed" xml:space="preserve">
      <value>Something went wrong, please try again.</value>
  </data>
  <data name="Remove_Rental" xml:space="preserve">
    <value>Remove a rental</value>
  </data>
  <data name="Select_Car_Drive_Removal" xml:space="preserve">
    <value>Which car would you like to remove a driver from?</value>
  </data>
  <data name="Select_Driver_Car_Removal" xml:space="preserve">
    <value>Which driver would you like to remove from this car?</value>
  </data>
  <data name="Driver_Not_Exist" xml:space="preserve">
    <value>This driver does not exist. Please try again.</value>
  </data>
  <data name="Select_Culture" xml:space="preserve">
    <value>Pick a culture: </value>
  </data>
  <data name="Updated_Culture" xml:space="preserve">
    <value>Updated culture to </value>
  </data>
  <data name="Culture_Invalid" xml:space="preserve">
    <value>That's not a valid culture, please try again.</value>
  </data>
  <data name="How_much_does_the_rental_cost" xml:space="preserve">
    <value>How much does the rental cost: </value>
  </data>
  <data name="Please_enter_a_driver_ID" xml:space="preserve">
    <value>Please enter a driver ID: </value>
  </data>
  <data name="Which_driver_would_you_like_to_add_to_this_car" xml:space="preserve">
    <value>Which driver would you like to add to this car?</value>
  </data>
  <data name="GetInfo_Car" xml:space="preserve">
    <value>Car with numberplate: {0} from {1} - on {2} {3}</value>
  </data>
  <data name="Managed_By_Garage" xml:space="preserve">
    <value>[Managed by garage '{0}']</value>
  </data>
  <data name="Born_On_Date" xml:space="preserve">
    <value>born on {0}</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>From</value>
  </data>
</root>